#include <iostream>

/* Unix */
#include <sys/ioctl.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>

/* C */
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <errno.h>

#define NODE_HIDRAW "/dev/hidraw0"
#define NODE_MKNOD "/dev/sis_touch_i2c_hidraw"

int main(int argc, char *argv[])
{
    printf("VERSION %s\n", APP_VERSION);

    int fd = -1;
    std::string devStr = NODE_HIDRAW;

    if( argc > 1 && strcmp(argv[1], "-m") == 0 )
    {
        devStr = NODE_MKNOD;
    }

    const char* devName = devStr.c_str();

    /* open */
    printf("open devName='%s'\n", devName);
    fd = open(devName, O_RDWR | O_NONBLOCK);

    /* handle error */
    if (fd < 0) 
    {
        printf("openDevice, unable to open device, errno=%d (%s)\n", errno, strerror(errno));

        return -1;
    }

    printf("fd : %d\n",  fd );


    /* close */
    int ret = 0;
    if(fd >= 0)
    {
        printf("close fd='%d'\n", fd);
        ret = close(fd);
        fd = -1;
    }

    /* handle error */
    if (ret < 0) 
    {
        printf("closeDevice, unable to close device, errno=%d (%s)\n", errno, strerror(errno));
        return -1;
    }

    printf("fd : %d\n",  fd );

    return 0;
}

